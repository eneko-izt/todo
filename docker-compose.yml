version: "3.9"

services:
  blog:
    image: webdevops/php-apache-dev:${DC_PHP:-7.4}
    user: "${DC_UID:-1000}:${DC_GID:-1000}"
    volumes:
      - ./:/app
      - ${HOME}/Webguneak/Packages:/packages
      - ${HOME}/Webguneak/dc-data/home:/home/application
    working_dir: /app
    ports:
      - "80:80"
    environment:
      WEB_DOCUMENT_ROOT: /app/public
      CONTAINER_UID: 1000
      XDEBUG_CLIENT_HOST: 172.17.0.1
      XDEBUG_CLIENT_PORT: 9000
      XDEBUG_START_WITH_REQUEST: "trigger"
      XDEBUG_SESSION: VSCODE
      XDEBUG_MODE: "debug,develop,coverage,trace,profile"
      PHP_MEMORY_LIMIT: 9064M
    depends_on:
      - db
    networks:
      - frontend

  blog-composer:
    image: webdevops/php-apache-dev:${DC_PHP:-7.4}
    profiles: ["composer"]
    volumes:
      - ./:/app
      - ${HOME}/Webguneak/Packages:/packages
      - ${HOME}/Webguneak/dc-data/home:/home/application
      - ${HOME}/Webguneak/dc-data/composerCache:/composerCache
    working_dir: /app
    environment:
      WEB_DOCUMENT_ROOT: /app/public
    command: bash -c "
      rm -Rf vendor/iztkoop
      && rm -f composer.lock
      && composer config -g cache-dir /composerCache
      && composer install --no-progress
      && chown -R ${DC_UID:-1000}:${DC_GID:-1000} vendor
      && chown ${DC_UID:-1000}:${DC_GID:-1000} composer.lock
      && composer show | grep izt"
    networks:
      - frontend

  blog-npm:
    image: node:${DC_NODE:-14-bullseye}
    profiles: ["npm"]
    volumes:
      - ./:/app
      - ${HOME}/Webguneak/Packages:/packages
      - ${HOME}/Webguneak/dc-data/home:/home/application
      - ${HOME}/Webguneak/dc-data/npmCache:/npmCache
    working_dir: /app
    environment:
      WEB_DOCUMENT_ROOT: /app/public
    command: bash -c "
      rm -f package-lock.json
      && rm -Rf node_modules
      && npm config set cache /npmCache --global
      && npm install
      && npm run prod
      && chown -R ${DC_UID:-1000}:${DC_GID:-1000} node_modules
      && chown ${DC_UID:-1000}:${DC_GID:-1000} package-lock.json
      && chown -R ${DC_UID:-1000}:${DC_GID:-1000} public"
    networks:
      - frontend

  blog-migrateall:
    image: webdevops/php-apache-dev:${DC_PHP:-7.4}
    profiles: ["migrate-all"]
    volumes:
      - ./:/app
      - ${HOME}/Webguneak/Packages:/packages
      - ${HOME}/Webguneak/dc-data/home:/home/application
      - ${HOME}/Webguneak/dc-data/composerCache:/composerCache
    working_dir: /app
    environment:
      WEB_DOCUMENT_ROOT: /app/public
    command: bash -c "
      composer config -g cache-dir /composerCache
      && composer install --no-progress
      && php artisan migrate:fresh
      && php artisan db:seed
      && chown -R ${DC_UID:-1000}:${DC_GID:-1000} vendor"
    depends_on:
      - db
    networks:
      - frontend

  blog-migrate:
    image: webdevops/php-apache-dev:${DC_PHP:-7.4}
    profiles: ["migrate"]
    volumes:
      - ./:/app
      - ${HOME}/Webguneak/Packages:/packages
      - ${HOME}/Webguneak/dc-data/home:/home/application
      - ${HOME}/Webguneak/dc-data/composerCache:/composerCache
    working_dir: /app
    environment:
      WEB_DOCUMENT_ROOT: /app/public
    command: bash -c "
      composer config -g cache-dir /composerCache
      && composer install --no-progress
      && chown -R ${DC_UID:-1000}:${DC_GID:-1000} vendor"
    depends_on:
      - db
    networks:
      - frontend

  blog-phpunit:
    image: webdevops/php-apache-dev:${DC_PHP:-7.4}
    profiles: ["phpunit"]
    volumes:
      - ./:/app
      - ${HOME}/Webguneak/Packages:/packages
      - ${HOME}/Webguneak/dc-data/home:/home/application
      - ${HOME}/Webguneak/dc-data/composerCache:/composerCache
    working_dir: /app
    environment:
      WEB_DOCUMENT_ROOT: /app/public
    command: bash -c "XDEBUG_MODE='coverage' php vendor/bin/phpunit"
    networks:
      - frontend

  db:
    image: mariadb:10.1
    command: --default-authentication-plugin=mysql_native_password --sql-mode=""
    environment:
      MYSQL_ROOT_PASSWORD: tormenta
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
    volumes:
      #- ./db_init.sql:/docker-entrypoint-initdb.d/db_init.sql
      - ./dc-data/mysql:/var/lib/mysql
      - ./dc-data/mysqldumps:/mysqldumps
    networks:
      - frontend
    ports:
      - 13306:3306

  myadmin:
    image: phpmyadmin:latest
    ports:
      - 4000:80
    environment:
      UPLOAD_LIMIT: 64M
    links:
      - db:db
    networks:
      - frontend

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - ${MAILHOG_PORT:-8025}:8025
    networks:
      - frontend

networks:
  frontend: null
